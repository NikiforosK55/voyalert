name: voyalert/backend => Docker Hub

on:
  push:
    branches: ['master']
  workflow_dispatch:

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
jobs:
  evaluate-version:
    runs-on: ubuntu-latest
    outputs:
      evaluated: ${{ steps.compare-versions.outputs.evaluated }}
    steps:
      - uses: actions/checkout@v4
      - name: Get package.json version
        id: get-version-package-json
        run: |
          PACKAGE_JSON_VERSION=$(jq -r .version packages/backend/package.json)
          echo "Current package.json version is $PACKAGE_JSON_VERSION"
          echo "result=$PACKAGE_JSON_VERSION" >> "$GITHUB_OUTPUT"
      - name: Get Docker Hub tag
        id: get-tag-docker-hub
        run: |
          DOCKER_HUB_TAG=$(curl -s "https://hub.docker.com/v2/repositories/ondrejnedoma/voyalert-backend/tags/" | jq -r 'if has("results") and (.results | length > 0) then .results[0].name else "0" end')
          echo "Latest Docker Hub tag is $DOCKER_HUB_TAG"
          echo "result=$DOCKER_HUB_TAG" >> "$GITHUB_OUTPUT"
      - name: Compare the package.json version and Docker Hub tag
        id: compare-versions
        env:
          PACKAGE_JSON_VERSION: ${{ steps.get-version-package-json.outputs.result }}
          DOCKER_HUB_TAG: ${{ steps.get-tag-docker-hub.outputs.result }}
        run: |
          if [ "$DOCKER_HUB_TAG" == "$PACKAGE_JSON_VERSION" ]; then
            echo "Latest tag on Docker Hub matches the version in package.json"
            echo "evaluated=false" >> "$GITHUB_OUTPUT"
          else
            echo "Latest tag on Docker Hub does not match the version in package.json, will build and push image to Docker Hub"
            echo "evaluated=$PACKAGE_JSON_VERSION" >> "$GITHUB_OUTPUT"
          fi
  push:
    runs-on: ubuntu-latest
    needs: evaluate-version
    env:
      VERSION: ${{ needs.evaluate-version.outputs.evaluated }}
    if: ${{ needs.evaluate-version.outputs.evaluated != 'false' }}
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        id: docker-build
        run: |
          echo "Building Docker image with tag: $VERSION"
          docker build -t ondrejnedoma/voyalert-backend:$VERSION ./packages/backend
      - name: Log in to Docker Hub
        id: docker-login
        run: |
          echo "logging in to Docker Hub"
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
      - name: Push the image to Docker Hub
        id: docker-push
        run: |
          docker push ondrejnedoma/voyalert-backend:$VERSION
          echo "Pushed image to Docker Hub"
